require 'minitest/autorun'

# https://adventofcode.com/2019/day/1

class Day1 < MiniTest::Test
  def test_day_1
    assert_equal(2, module_fuel(14).sum)
    assert_equal(966, module_fuel(1969).sum)
    assert_equal(50_346, module_fuel(100_756).sum)

    modules = DATA.read.split(',').map(&method(:Integer))
    assert_equal 5_017_110, modules.flat_map { |e| module_fuel(e).to_a }.sum
  end

  private
  def module_fuel(weight)
    Enumerator.new do |yielder|
      fuel = weight
      loop do
        fuel = (fuel / 3).floor - 2
        break if fuel <= 0

        yielder << fuel
      end
    end
  end
end
__END__
88062,147838,73346,80732,89182,86798,145656,53825,79515,78250,143033,53680,89366,123255,74974,65373,107733,118266,50726,87810,104355,85331,109624,54282,107472,119291,128702,81132,94609,105929,63918,113360,66932,145080,132130,63858,104334,140635,67642,111552,93446,59263,133164,119788,97327,77379,144054,110747,89394,123533,86026,124422,108855,125000,99270,55789,146945,103156,141044,94238,136833,54370,69178,142349,72239,149992,50901,112759,105467,90841,55693,52532,92343,134889,143351,123359,134972,59986,85415,136521,81581,131078,131201,56194,142135,69982,140667,110013,67772,108135,92591,87200,78189,73407,145395,131869,143480,82068,82423,110819
